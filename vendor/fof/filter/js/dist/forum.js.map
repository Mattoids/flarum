{"version":3,"file":"forum.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEAC,wEAAA,CACE,YADF,EAEE,YAAM;EACJD,8DAAQ,CAACE,sFAAD,EAAwB,YAAxB,EAAsC,UAAUI,QAAV,EAAoBC,IAApB,EAA0B;IACtE,IAAIA,IAAI,CAACC,IAAL,OAAgB,SAApB,EAA+B;MAC7B,IAAMC,MAAM,GAAGF,IAAI,CAACG,YAAL,EAAf;MACA,OAAO,CAACT,wEAAA,CAAqB,+BAArB,CAAD,EAAwDQ,MAAM,GAAG;QAAM,SAAS,EAAC;MAAhB,GAAuCA,MAAvC,CAAH,GAA2D,EAAzH,CAAP;IACD;;IACD,OAAOH,QAAQ,CAACC,IAAD,CAAf;EACD,CANO,CAAR;AAOD,CAVH,EAWE,CAAC,EAXH;;;;;;;;;;;AChBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://@fof/filter/./src/forum/index.js","webpack://@fof/filter/external root \"flarum.core.compat['common/extend']\"","webpack://@fof/filter/external root \"flarum.core.compat['forum/app']\"","webpack://@fof/filter/external root \"flarum.core.compat['forum/components/CommentPost']\"","webpack://@fof/filter/webpack/bootstrap","webpack://@fof/filter/webpack/runtime/compat get default export","webpack://@fof/filter/webpack/runtime/define property getters","webpack://@fof/filter/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/filter/webpack/runtime/make namespace object","webpack://@fof/filter/./forum.js"],"sourcesContent":["/*\n *\n *  This file is part of fof/filter.\n *\n *  Copyright (c) 2020 FriendsOfFlarum..\n *\n *  For the full copyright and license information, please view the license.md\n *  file that was distributed with this source code.\n *\n */\n\nimport { override } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\n\nimport CommentPost from 'flarum/forum/components/CommentPost';\n\napp.initializers.add(\n  'fof-filter',\n  () => {\n    override(CommentPost.prototype, 'flagReason', function (original, flag) {\n      if (flag.type() === 'autoMod') {\n        const detail = flag.reasonDetail();\n        return [app.translator.trans('fof-filter.forum.flagger_name'), detail ? <span className=\"Post-flagged-detail\">{detail}</span> : ''];\n      }\n      return original(flag);\n    });\n  },\n  -20\n);\n","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['forum/app'];","module.exports = flarum.core.compat['forum/components/CommentPost'];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*\n *\n *  This file is part of fof/filter.\n *\n *  Copyright (c) 2020 FriendsOfFlarum..\n *\n *  For the full copyright and license information, please view the license.md\n *  file that was distributed with this source code.\n *\n */\n\nexport * from './src/forum';\n"],"names":["override","app","CommentPost","initializers","add","prototype","original","flag","type","detail","reasonDetail","translator","trans"],"sourceRoot":""}