{"version":3,"file":"admin.js","mappings":";;;;;;;;;;;;;;;AAAmC;AACJ;AAE/BA,oEAAgB,CAACG,GAAG,CAACF,yDAAgB,EAAE,YAAM;EAC3CD,qEAAiB,OACX,CAACC,yDAAgB;EACrB;EAAA,CACCK,kBAAkB,CACjB;IACEC,IAAI,EAAE,oBAAoB;IAC1BC,KAAK,EAAER,kEAAc,CAACU,KAAK,CAACT,yDAAgB,GAAG,8BAA8B,CAAC;IAC9EU,UAAU,kBAAgBV,yDAAgB,eAAY;IACtDW,UAAU,EAAE;EACd,CAAC,EACD,MACF;EACA;EAAA,CACCN,kBAAkB,CACjB;IACEC,IAAI,EAAE,YAAY;IAClBC,KAAK,EAAER,kEAAc,CAACU,KAAK,CAACT,yDAAgB,GAAG,mCAAmC,CAAC;IACnFU,UAAU,kBAAgBV,yDAAgB;EAC5C,CAAC,EACD,OACF;EACA;EAAA,CACCY,eAAe,CAAC;IACfC,OAAO,EAAEb,yDAAgB,GAAG,kBAAkB;IAC9Cc,IAAI,EAAE,SAAS;IACfP,KAAK,EAAER,kEAAc,CAACU,KAAK,CAACT,yDAAgB,GAAG,mCAAmC,CAAC;IACnFe,IAAI,EAAEhB,kEAAc,CAACU,KAAK,CAACT,yDAAgB,GAAG,wCAAwC;EACxF,CAAC,CAAC;AACN,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;AChCkC;AAIpC;AACA;AACA;AACO,IAAMG,SAAS,GAAG,2BAA2B;;AAEpD;AACA;AACA;AACA;AACO,SAASa,GAAGA,CAACA,GAAW,EAAU;EACvC,OAAUb,SAAS,SAAIa,GAAG,CAACC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASR,KAAKA,CAACS,EAAU,EAAEC,UAAgC,EAAO;EAAA,IAAvCA,UAAgC;IAAhCA,UAAgC,GAAG,CAAC,CAAC;EAAA;EACrE,OAAOpB,mEAAc,CAACU,KAAK,CAACO,GAAG,CAACE,EAAE,CAAC,EAAEC,UAAU,CAAC;AAClD;AAEA,iEAAe;EACbhB,SAAS,EAATA,SAAS;EACTa,GAAG,EAAHA,GAAG;EACHP,KAAK,EAALA;AACF,CAAC;;;;;;;;;;;AC9BD;;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;ACN6B","sources":["webpack://@imdong/flarum-ext-visible-to-op-only/./src/admin/index.ts","webpack://@imdong/flarum-ext-visible-to-op-only/./src/common/index.ts","webpack://@imdong/flarum-ext-visible-to-op-only/external root \"flarum.core.compat['admin/app']\"","webpack://@imdong/flarum-ext-visible-to-op-only/external root \"flarum.core.compat['common/app']\"","webpack://@imdong/flarum-ext-visible-to-op-only/webpack/bootstrap","webpack://@imdong/flarum-ext-visible-to-op-only/webpack/runtime/compat get default export","webpack://@imdong/flarum-ext-visible-to-op-only/webpack/runtime/define property getters","webpack://@imdong/flarum-ext-visible-to-op-only/webpack/runtime/hasOwnProperty shorthand","webpack://@imdong/flarum-ext-visible-to-op-only/webpack/runtime/make namespace object","webpack://@imdong/flarum-ext-visible-to-op-only/./admin.ts"],"sourcesContent":["import app from 'flarum/admin/app';\nimport common from \"../common\";\n\napp.initializers.add(common.extPrefix, () => {\n  app.extensionData\n    .for(common.extPrefix)\n    // 添加权限 查看回复\n    .registerPermission(\n      {\n        icon: 'fas fa-user-shield',\n        label: app.translator.trans(common.extPrefix + '.admin.permissions.view-post'),\n        permission: `discussion.${common.extPrefix}.viewPosts`,\n        allowGuest: true,\n      },\n      'view'\n    )\n    // 添加权限 查看回复隐藏内容\n    .registerPermission(\n      {\n        icon: 'far fa-eye',\n        label: app.translator.trans(common.extPrefix + '.admin.permissions.view-hide-post'),\n        permission: `discussion.${common.extPrefix}.viewHidePosts`,\n      },\n      'start'\n    )\n    // 注册配置 允许查看置顶帖\n    .registerSetting({\n      setting: common.extPrefix + '.allowViewSticky',\n      type: 'boolean',\n      label: app.translator.trans(common.extPrefix + '.admin.settings.allow-view-sticky'),\n      help: app.translator.trans(common.extPrefix + '.admin.settings.allow-view-sticky-text'),\n    })\n});\n","import app from 'flarum/common/app';\n\ntype TranslatorParameters = Record<string, unknown>;\n\n/**\n * 统一前缀\n */\nexport const extPrefix = 'imdong-visible-to-op-only'\n\n/**\n * 获取一个 key\n * @param key\n */\nexport function key(key: string): string {\n  return `${extPrefix}.${key.replace(/^\\.*/, '')}`\n}\n\n/**\n * 获取特定 key 的翻译\n * @param id\n * @param parameters\n */\nexport function trans(id: string, parameters: TranslatorParameters = {}) {\n  return app.translator.trans(key(id), parameters);\n}\n\nexport default {\n  extPrefix,\n  key,\n  trans\n}\n","module.exports = flarum.core.compat['admin/app'];","module.exports = flarum.core.compat['common/app'];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export * from './src/common';\nexport * from './src/admin';\n"],"names":["app","common","initializers","add","extPrefix","extensionData","registerPermission","icon","label","translator","trans","permission","allowGuest","registerSetting","setting","type","help","key","replace","id","parameters"],"sourceRoot":""}