{"version":3,"sources":["webpack://@kyrne/whisper/webpack/bootstrap","webpack://@kyrne/whisper/external \"flarum.core.compat['forum/app']\"","webpack://@kyrne/whisper/external \"flarum.core.compat['common/Model']\"","webpack://@kyrne/whisper/external \"flarum.core.compat['common/helpers/username']\"","webpack://@kyrne/whisper/external \"flarum.core.compat['common/utils/Stream']\"","webpack://@kyrne/whisper/external \"flarum.core.compat['common/helpers/avatar']\"","webpack://@kyrne/whisper/external \"flarum.core.compat['common/Component']\"","webpack://@kyrne/whisper/external \"flarum.core.compat['common/utils/mixin']\"","webpack://@kyrne/whisper/external \"flarum.core.compat['common/components/Button']\"","webpack://@kyrne/whisper/external \"flarum.core.compat['common/utils/withAttr']\"","webpack://@kyrne/whisper/external \"flarum.core.compat['common/extend']\"","webpack://@kyrne/whisper/external \"flarum.core.compat['common/components/Page']\"","webpack://@kyrne/whisper/external \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@kyrne/whisper/external \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@kyrne/whisper/external \"flarum.core.compat['common/models/User']\"","webpack://@kyrne/whisper/external \"flarum.core.compat['common/utils/classList']\"","webpack://@kyrne/whisper/external \"flarum.core.compat['common/helpers/humanTime']\"","webpack://@kyrne/whisper/external \"flarum.core.compat['common/helpers/icon']\"","webpack://@kyrne/whisper/external \"flarum.core.compat['common/helpers/userOnline']\"","webpack://@kyrne/whisper/external \"flarum.core.compat['common/components/Modal']\"","webpack://@kyrne/whisper/external \"flarum.core.compat['forum/components/Search']\"","webpack://@kyrne/whisper/external \"flarum.core.compat['common/helpers/highlight']\"","webpack://@kyrne/whisper/external \"flarum.core.compat['common/utils/ItemList']\"","webpack://@kyrne/whisper/external \"flarum.core.compat['common/utils/extractText']\"","webpack://@kyrne/whisper/external \"flarum.core.compat['common/utils/extract']\"","webpack://@kyrne/whisper/external \"flarum.core.compat['forum/components/HeaderSecondary']\"","webpack://@kyrne/whisper/external \"flarum.core.compat['forum/components/NotificationsDropdown']\"","webpack://@kyrne/whisper/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@kyrne/whisper/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@kyrne/whisper/./src/forum/models/Message.js","webpack://@kyrne/whisper/./src/forum/models/Conversation.js","webpack://@kyrne/whisper/./src/forum/models/ConversationUser.js","webpack://@kyrne/whisper/./src/forum/components/MessageText.js","webpack://@kyrne/whisper/./src/forum/components/ConversationView.js","webpack://@kyrne/whisper/./src/forum/components/UserListItem.js","webpack://@kyrne/whisper/./src/forum/components/UserSearchSource.js","webpack://@kyrne/whisper/./src/forum/components/RecipientSearch.js","webpack://@kyrne/whisper/./src/forum/components/recipientLabel.js","webpack://@kyrne/whisper/./src/forum/components/StartConversationModal.js","webpack://@kyrne/whisper/./src/forum/components/ConversationsList.js","webpack://@kyrne/whisper/./src/forum/components/ConversationsPage.js","webpack://@kyrne/whisper/./src/forum/components/ConversationViewPage.js","webpack://@kyrne/whisper/./src/forum/components/ConversationsDropdown.js","webpack://@kyrne/whisper/./src/forum/index.js","webpack://@kyrne/whisper/./src/forum/addConversationsDropdown.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","Message","apiEndpoint","this","exists","data","id","mixin","Model","message","attribute","user","hasOne","isHidden","createdAt","transformDate","conversation","number","Conversation","messages","hasMany","recipients","totalMessages","notNew","updatedAt","ConversationUser","userId","conversationId","lastRead","MessageText","initAttrs","attrs","className","content","preview","view","oncreate","vnode","updatePreview","s9e","TextFormatter","dom","updateInterval","setInterval","onremove","clearInterval","Component","ConversationView","oninit","loading","mobile","idParam","route","param","firstLoad","typingTimeout","sendTimeout","interval3","timer","redraw","setTimeout","interval1","interval2","typingTime","Date","now","typing","initPost","newMessageCount","load","messageContent","Stream","Promise","$","animate","scrollTop","prop","app","pusher","then","channels","unbind","onupdate","scroll","firstMsg","getMessages","cache","length","offset","top","onbeforeupdate","off","on","e","conversations","currentTarget","attr","index","cipher","keyCode","forum","sendMessage","parseInt","children","is","decryptMessages","list","scrollMore","innerHeight","scrollHeight","recipient","style","avatar","translator","trans","username","count","filter","self","findIndex","sort","a","b","map","myMessage","session","humanTime","attributes","icon","display","size","oninput","withAttr","typingPush","placeholder","rows","Button","component","onclick","disabled","request","method","url","body","replace","store","createRecord","save","messageContents","push","messageId","find","results","payload","oldNumber","meRecipient","response","newNumber","unreadMessages","lastUnreadMessage","pushAttributes","UserListItem","active","userOnline","UserSearchSource","query","conversationResults","highlight","text","data-index","q","page","limit","pushResults","result","getById","RecipientSearch","updateMaxHeight","sources","sourceItems","toArray","conversationsRecipient","classList","open","focused","loadingSources","config","element","focus","type","extractText","onfocus","hasFocus","onblur","onkeyup","clearTimeout","typingTimer","doSearch","onkeydown","in","target","addRecipient","trigger","source","LoadingIndicator","link","extract","recipientLabel","removeRecipient","items","ItemList","add","clear","findRecipient","Search","StartConversationModal","already","title","stopImmediatePropagation","recpient","class","state","search","onsubmit","preventDefault","input","document","createElement","appendChild","select","execCommand","remove","preconv","modal","close","Modal","ConversationsList","currentConversation","loadMore","conversationComponent","showModal","Array","isArray","show","ConversationsPage","history","bodyClass","Page","ConversationViewPage","init","ConversationsDropdown","label","drawer","isOpen","goToRoute","getMenu","menuClassName","showing","getUnreadCount","getNewCount","NotificationsDropdown","initializers","models","conversation_users","User","routes","path","extend","HeaderSecondary","IndexPage"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 27);\n","module.exports = flarum.core.compat['forum/app'];","module.exports = flarum.core.compat['common/Model'];","module.exports = flarum.core.compat['common/helpers/username'];","module.exports = flarum.core.compat['common/utils/Stream'];","module.exports = flarum.core.compat['common/helpers/avatar'];","module.exports = flarum.core.compat['common/Component'];","module.exports = flarum.core.compat['common/utils/mixin'];","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/utils/withAttr'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['common/components/Page'];","module.exports = flarum.core.compat['common/components/LoadingIndicator'];","module.exports = flarum.core.compat['forum/components/IndexPage'];","module.exports = flarum.core.compat['common/models/User'];","module.exports = flarum.core.compat['common/utils/classList'];","module.exports = flarum.core.compat['common/helpers/humanTime'];","module.exports = flarum.core.compat['common/helpers/icon'];","module.exports = flarum.core.compat['common/helpers/userOnline'];","module.exports = flarum.core.compat['common/components/Modal'];","module.exports = flarum.core.compat['forum/components/Search'];","module.exports = flarum.core.compat['common/helpers/highlight'];","module.exports = flarum.core.compat['common/utils/ItemList'];","module.exports = flarum.core.compat['common/utils/extractText'];","module.exports = flarum.core.compat['common/utils/extract'];","module.exports = flarum.core.compat['forum/components/HeaderSecondary'];","module.exports = flarum.core.compat['forum/components/NotificationsDropdown'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import Model from 'flarum/common/Model';\nimport mixin from 'flarum/common/utils/mixin';\n\nexport default class Message extends mixin(Model, {\n  message: Model.attribute('message'),\n  user: Model.hasOne('user'),\n  isHidden: Model.attribute('isHidden'),\n  createdAt: Model.attribute('createdAt', Model.transformDate),\n  conversation: Model.hasOne('conversation'),\n  number: Model.hasOne('number'),\n}) {\n  apiEndpoint() {\n    return `/whisper/messages${this.exists ? `/${this.data.id}` : ''}`;\n  }\n}\n","import Model from 'flarum/common/Model';\nimport mixin from 'flarum/common/utils/mixin';\n\nexport default class Conversation extends mixin(Model, {\n  messages: Model.hasMany('messages'),\n  recipients: Model.hasMany('recipients'),\n  totalMessages: Model.attribute('totalMessages'),\n  notNew: Model.attribute('notNew'),\n  createdAt: Model.attribute('createdAt', Model.transformDate),\n  updatedAt: Model.attribute('updatedAt', Model.transformDate),\n}) {\n  apiEndpoint() {\n    return `/whisper/conversations${this.exists ? `/${this.data.id}` : ''}`;\n  }\n}\n","import Model from 'flarum/common/Model';\nimport mixin from 'flarum/common/utils/mixin';\n\nexport default class ConversationUser extends mixin(Model, {\n  conversation: Model.hasOne('conversation'),\n  user: Model.hasOne('user'),\n\n  userId: Model.attribute('userId'),\n  conversationId: Model.attribute('conversationId'),\n  lastRead: Model.attribute('lastRead'),\n}) {}\n","import Component from 'flarum/common/Component';\n\nexport default class MessageText extends Component {\n  static initAttrs(attrs) {\n    attrs.className = attrs.className || '';\n    attrs.content = attrs.content || '';\n    attrs.preview = attrs.preview || false;\n  }\n\n  view() {\n    return <div className={this.attrs.className} />;\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    if (this.attrs.preview) {\n      let preview;\n      const updatePreview = () => {\n        const content = this.attrs.content;\n\n        if (preview === content) return;\n\n        preview = content;\n\n        s9e.TextFormatter.preview(content || '', vnode.dom);\n      };\n      updatePreview();\n\n      this.updateInterval = setInterval(updatePreview, 50);\n    } else {\n      s9e.TextFormatter.preview(this.attrs.content, vnode.dom);\n    }\n  }\n\n  onremove() {\n    clearInterval(this.updateInterval);\n  }\n}\n","import Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport avatar from 'flarum/common/helpers/avatar';\nimport username from 'flarum/common/helpers/username';\nimport humanTime from 'flarum/common/helpers/humanTime';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport MessageText from './MessageText';\nimport Stream from 'flarum/common/utils/Stream';\nimport withAttr from 'flarum/common/utils/withAttr';\nimport icon from 'flarum/common/helpers/icon';\nimport app from 'flarum/forum/app';\n\nexport default class ConversationView extends Component {\n  oninit(vnode) {\n    this.loading = true;\n    this.vnode = vnode;\n    this.mobile = vnode.attrs.mobile;\n    this.idParam = m.route.param('id');\n    this.firstLoad = true;\n\n    this.typingTimeout = true;\n\n    this.sendTimeout = true;\n\n    const interval1 = () => {\n      this.typingTimeout = true;\n      setTimeout(() => {\n        interval1();\n      }, 5000);\n    };\n\n    const interval2 = () => {\n      if (this.typingTime < new Date(Date.now() - 6000)) {\n        this.typing = false;\n        m.redraw();\n      }\n      setTimeout(() => {\n        interval2();\n      }, 6000);\n    };\n\n    this.interval3 = () => {\n      if (this.timer === 0) {\n        this.sendTimeout = true;\n        m.redraw();\n        return;\n      }\n      this.timer--;\n      if (this.timer >= 0) {\n        setTimeout(() => {\n          this.interval3();\n        }, 1000);\n      }\n    };\n\n    interval1();\n    interval2();\n\n    this.typing = false;\n\n    this.conversation = this.conversation ? this.conversation : vnode.attrs.conversation;\n\n    this.initPost();\n  }\n\n  initPost() {\n    this.newMessageCount = 0;\n\n    this.load();\n\n    this.messageContent = Stream('');\n\n    return new Promise(() => {\n      setTimeout(() => {\n        $('.chat-history').animate({ scrollTop: $('.chat-history').prop('scrollHeight') }, 1000);\n      }, 500);\n    });\n  }\n\n  onremove() {\n    if (app.pusher) {\n      app.pusher.then((object) => {\n        const channels = object.channels;\n        channels.user.unbind('typing');\n        channels.user.unbind('newMessage');\n      });\n    }\n  }\n\n  onupdate() {\n    $('.chat-history').scroll(() => {\n      if (!this.notNew) {\n        let pos = $('.chat-history').scrollTop();\n        if (pos === 0) {\n          const firstMsg = $('.message-content:first');\n          this.getMessages(app.cache.messages[this.conversation.id()].length);\n          if (!this.notNew) {\n            $('.chat-history').scrollTop(firstMsg.offset().top);\n          }\n        }\n      }\n    });\n  }\n\n  onbeforeupdate() {\n    $('.UserListItem')\n      .off('click')\n      .on('click', (e) => {\n        this.conversation = app.cache.conversations[$(e.currentTarget).attr('id')];\n        this.index = $(e.currentTarget).attr('id');\n        this.notNew = false;\n        this.cipher = null;\n        this.oninit(this.vnode);\n        m.redraw();\n      });\n\n    $('#MessageTextArea')\n      .off()\n      .on('keydown', (e) => {\n        if (e.keyCode === 13 && app.forum.attribute('whisperReturnKey')) {\n          $('#MessageTextArea').prop('disabled', true);\n          this.sendMessage();\n        }\n      });\n  }\n\n  oncreate() {\n    if (app.pusher) {\n      app.pusher.then((object) => {\n        const channels = object.channels;\n        channels.user.bind('newMessage', (data) => {\n          if (\n            parseInt(data.conversationId) === parseInt(this.conversation.id()) &&\n            $('.MessagesDropdown').children('.Dropdown-menu').is(':visible')\n          ) {\n            const message = {\n              id: Stream(data.id),\n              message: Stream(data.message),\n              user: Stream(this.user),\n              createdAt: Stream(data.createdAt),\n            };\n            this.decryptMessages([message]);\n            this.newMessageCount++;\n            this.typing = false;\n            m.redraw();\n            $('.chat-history').animate({ scrollTop: $('.chat-history').prop('scrollHeight') }, 1000);\n          }\n        });\n\n        channels.user.bind('typing', (data) => {\n          if (parseInt(data.conversationId) === parseInt(this.conversation.id())) {\n            let list = $('.chat-history');\n\n            let scrollMore = false;\n\n            if (list.scrollTop() + list.innerHeight() >= list[0].scrollHeight - 50) {\n              scrollMore = true;\n            }\n\n            this.typing = true;\n            this.typingTime = new Date();\n            m.redraw();\n\n            if (scrollMore) {\n              list.animate({ scrollTop: $('.chat-history').prop('scrollHeight') }, 400);\n            }\n          }\n        });\n\n        channels.user.bind('readMessage', (data) => {\n          if (parseInt(data.conversationId) === parseInt(this.conversation.id())) {\n            this.recipient.lastRead = m.prop(data.number);\n            m.redraw();\n          }\n        });\n      });\n    }\n  }\n\n  view() {\n    this.messages = app.cache.messages ? app.cache.messages[this.conversation.id()] : [];\n    return (\n      <div style={this.idParam && this.mobile ? 'width: 100%' : ''} className=\"chat\">\n        <div className=\"chat-header clearfix\">\n          {avatar(this.user)}\n\n          <div className=\"chat-about\">\n            <div className=\"chat-with\">{app.translator.trans('littlecxm-whisper.forum.chat.chat_with', { username: username(this.user) })}</div>\n            <div className=\"chat-num-messages\">\n              {app.translator.trans(\n                'littlecxm-whisper.forum.chat.messages_' + (parseInt(this.conversation.totalMessages()) > 1 ? 'multiple' : 'single'),\n                { count: this.conversation.totalMessages() + this.newMessageCount }\n              )}\n            </div>\n          </div>\n        </div>\n\n        {this.messages && this.messages.length > 0 && !this.loading ? (\n          [\n            <div className=\"chat-history\">\n              <ul>\n                {this.notNew ? <li className=\"startConvo\">{app.translator.trans('littlecxm-whisper.forum.chat.start_of_conversation')}</li> : ''}\n                {this.messages\n                  ? this.messages\n                      .filter((message, index, self) => index === self.findIndex((t) => t.message() === message.message()))\n                      .sort((a, b) => {\n                        return a.createdAt() - b.createdAt();\n                      })\n                      .map((message, i) => {\n                        const myMessage = parseInt(message.user().id()) === parseInt(app.session.user.id());\n                        return (\n                          <li className=\"clearfix message-content\">\n                            <div className={'message-data ' + (myMessage ? 'align-right' : '')}>\n                              <div className={'avatar-inline ' + (myMessage ? 'me' : 'other')}>\n                                {avatar(myMessage ? app.session.user : message.user())}\n                              </div>\n                              <span className=\"message-data-name\">{username(myMessage ? app.session.user : message.user())}</span>\n                              <span className=\"message-data-time\">{humanTime(message.createdAt())}</span>\n                            </div>\n                            <MessageText\n                              content={message.message()}\n                              className={'message ' + (myMessage ? 'my-message float-right' : 'other-message')}\n                            />\n                            {myMessage ? (\n                              parseInt(this.recipient.lastRead()) >= parseInt(message.data.attributes.number) ? (\n                                <span className=\"message-read\">{icon('fas fa-check')}</span>\n                              ) : (\n                                ''\n                              )\n                            ) : (\n                              ''\n                            )}\n                          </li>\n                        );\n                      })\n                  : ''}\n                {this.messageContent() ? (\n                  <li>\n                    <MessageText content={this.messageContent()} className={'message my-message float-right message-preview'} preview={true} />\n                  </li>\n                ) : (\n                  ''\n                )}\n                {this.typing ? (\n                  <li>\n                    <div className=\"tiblock\">\n                      <div className=\"tidot\"></div>\n                      <div className=\"tidot\"></div>\n                      <div className=\"tidot\"></div>\n                    </div>\n                  </li>\n                ) : (\n                  ''\n                )}\n              </ul>\n            </div>,\n          ]\n        ) : (\n          <LoadingIndicator display=\"block\" size=\"medium\" />\n        )}\n\n        <form className=\"chat-message clearfix\">\n          <textarea\n            id=\"MessageTextArea\"\n            value={this.messageContent()}\n            oninput={withAttr('value', this.typingPush.bind(this))}\n            placeholder={app.translator.trans('littlecxm-whisper.forum.chat.text_placeholder')}\n            rows=\"3\"\n          ></textarea>\n\n          {Button.component(\n            {\n              onclick: this.sendMessage.bind(this),\n              className: 'Button Button--primary',\n              disabled: !this.messageContent() || !this.sendTimeout,\n            },\n            app.translator.trans('littlecxm-whisper.forum.chat.send')\n          )}\n        </form>\n      </div>\n    );\n  }\n\n  typingPush(value) {\n    this.messageContent(value);\n    m.redraw();\n    if (this.typingTimeout) {\n      app\n        .request({\n          method: 'POST',\n          url: app.forum.attribute('apiUrl') + '/whisper/messages/typing',\n          body: {\n            conversationId: this.conversation.id(),\n            userId: this.user.id(),\n          },\n        })\n        .then(() => {\n          this.typingTimeout = false;\n        });\n    }\n  }\n\n  sendMessage() {\n    if (this.sendTimeout) {\n      if (this.messageContent() === '' || !this.messageContent().replace(/\\s/g, '').length) return;\n      this.sendTimeout = false;\n      this.timer = 1;\n      this.interval3();\n      this.newMessageCount++;\n      app.store\n        .createRecord('messages')\n        .save({\n          messageContents: this.messageContent(),\n          conversationId: this.conversation.id(),\n        })\n        .then((message) => {\n          app.cache.messages[this.conversation.id()].push(message);\n          m.redraw();\n          this.messageContent('');\n          $('.chat-history').animate({ scrollTop: $('.chat-history').prop('scrollHeight') }, 500);\n          app.request({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + '/whisper/messages/read',\n            body: {\n              conversationId: this.conversation.id(),\n              messageId: message.id(),\n            },\n          });\n        });\n    }\n  }\n\n  getMessages(offset = 0) {\n    if (!this.notNew) {\n      app.store\n        .find('whisper/messages', this.conversation.id(), { offset })\n        .then((results) => {\n          delete results.payload;\n          if (this.firstLoad) {\n            const oldNumber = this.meRecipient.lastRead();\n            app\n              .request({\n                method: 'POST',\n                url: app.forum.attribute('apiUrl') + '/whisper/messages/read',\n                body: {\n                  conversationId: this.conversation.id(),\n                  messageId: results[0].id(),\n                },\n              })\n              .then((response) => {\n                const newNumber = response.data.attributes.lastRead;\n                let unreadMessages = 0;\n                const lastUnreadMessage = app.session.user.unreadMessages();\n\n                if (lastUnreadMessage !== 0) unreadMessages = lastUnreadMessage - (newNumber - oldNumber);\n\n                if (unreadMessages >= 0) {\n                  app.session.user.pushAttributes({\n                    unreadMessages,\n                  });\n\n                  m.redraw();\n                }\n\n                this.firstLoad = false;\n              });\n          }\n          app.cache.messages[this.conversation.id()].push(...results);\n          if (results.length < 20) {\n            this.notNew = true;\n          }\n        })\n        .then(() => {\n          this.loading = false;\n          m.redraw();\n        });\n    }\n  }\n\n  load() {\n    this.loading = true;\n    m.redraw();\n\n    if (!app.cache.messages) {\n      app.cache.messages = [];\n    }\n\n    this.conversation.recipients().map((recipient) => {\n      if (parseInt(recipient.user().id()) !== parseInt(app.session.user.id())) {\n        this.user = recipient.user();\n        this.recipient = recipient;\n      } else {\n        this.meRecipient = recipient;\n      }\n    });\n\n    if (!app.cache.messages[this.conversation.id()]) {\n      app.cache.messages[this.conversation.id()] = [];\n    }\n\n    this.getMessages();\n  }\n}\n","import Component from 'flarum/common/Component';\nimport avatar from 'flarum/common/helpers/avatar';\nimport username from 'flarum/common/helpers/username';\nimport userOnline from 'flarum/common/helpers/userOnline';\nimport app from 'flarum/forum/app';\n\nexport default class UserListItem extends Component {\n  oninit(vnode) {\n    this.conversation = vnode.attrs.conversation;\n    this.index = vnode.attrs.i;\n    this.active = vnode.attrs.active;\n    this.loading = true;\n\n    this.conversation.recipients().map((recipient) => {\n      if (parseInt(recipient.user().id()) !== parseInt(app.session.user.id())) {\n        this.user = recipient.user();\n        this.loading = false;\n        m.redraw();\n      }\n    });\n\n    const interval2 = () => {\n      if (this.typingTime < new Date(Date.now() - 6000)) {\n        this.typing = false;\n        m.redraw();\n      }\n      setTimeout(() => {\n        interval2();\n      }, 6000);\n    };\n\n    interval2();\n\n    super.oncreate(vnode);\n  }\n\n  onremove(vnode) {\n    if (app.pusher) {\n      app.pusher.then((object) => {\n        const channels = object.channels;\n        channels.user.unbind('typing');\n      });\n    }\n\n    super.onremove(vnode);\n  }\n\n  oncreate(vnode) {\n    if (app.pusher) {\n      app.pusher.then((object) => {\n        const channels = object.channels;\n        channels.user.bind('typing', (data) => {\n          if (parseInt(data.conversationId) === parseInt(this.conversation.id())) {\n            this.typing = true;\n            this.typingTime = new Date();\n            m.redraw();\n          }\n        });\n      });\n    }\n\n    super.oncreate(vnode);\n  }\n\n  view(vnode) {\n    if (this.loading || !this.user) return null;\n\n    const onclick = (e) => {\n      this.attrs.onclick(e);\n      this.active = this.conversation.id() === app.cache.conversations[$(e.currentTarget).attr('id')].id();\n    };\n\n    return (\n      <li id={this.index} className={this.active ? 'UserListItem active' : 'UserListItem'} onclick={onclick}>\n        <div className=\"UserListItem-content\">\n          {avatar(this.user)}\n          <div className=\"info\">\n            {username(this.user)}\n            {userOnline(this.user)}\n          </div>\n          {!!this.typing && (\n            <div className=\"tiblock\">\n              <div className=\"tidot\"></div>\n            </div>\n          )}\n        </div>\n      </li>\n    );\n  }\n}\n","import highlight from 'flarum/common/helpers/highlight';\nimport avatar from 'flarum/common/helpers/avatar';\nimport username from 'flarum/common/helpers/username';\n\nexport default class UserSearchSource {\n  view(query) {\n    if (query.length < 3 || this.loading) return;\n\n    if (!app.cache.conversationResults) {\n      app.cache.conversationResults = [];\n    }\n\n    this.query = query;\n\n    if (!app.cache.conversationResults[this.query]) {\n      this.loading = true;\n\n      app.cache.conversationResults[this.query] = [];\n      app.store\n        .find('users', {\n          filter: { q: this.query },\n          page: { limit: 5 },\n        })\n        .then(this.pushResults.bind(this));\n    } else\n      return [\n        <li className=\"Dropdown-header\">{app.translator.trans('core.forum.search.users_heading')}</li>,\n        app.cache.conversationResults[this.query].map((user) => {\n          let name = username(user);\n          name = highlight(name.text, this.query);\n\n          return (\n            <li className=\"SearchResult\" data-index={user.id()}>\n              <a data-index={'users:' + user.id()}>\n                {avatar(user)}\n                {name}\n              </a>\n            </li>\n          );\n        }),\n      ];\n  }\n\n  pushResults(results) {\n    results.payload.data.map((result) => {\n      let user = app.store.getById('users', result.id);\n      if (parseInt(user.id()) !== parseInt(app.session.user.id())) {\n        app.cache.conversationResults[this.query].push(user);\n      }\n    });\n    this.loading = false;\n    m.redraw();\n  }\n}\n","import Search from 'flarum/forum/components/Search';\nimport UserSearchSource from './UserSearchSource';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport classList from 'flarum/common/utils/classList';\nimport extractText from 'flarum/common/utils/extractText';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport recipientLabel from './recipientLabel';\nimport Stream from 'flarum/common/utils/Stream';\nimport withAttr from 'flarum/common/utils/withAttr';\nimport app from 'flarum/forum/app';\n\nexport default class RecipientSearch extends Search {\n  oninit(attrs) {\n    this.value = Stream();\n    super.oninit(attrs);\n  }\n\n  updateMaxHeight() {\n    // stub\n  }\n\n  view() {\n    if (typeof this.value() === 'undefined') {\n      this.value('');\n    }\n\n    const loading = this.value() && this.value().length >= 3;\n\n    if (!this.sources) {\n      this.sources = this.sourceItems().toArray();\n    }\n\n    return (\n      <div className=\"AddRecipientModal-body\">\n        {app.cache.conversationsRecipient === null ? (\n          <div className=\"AddRecipientModal-form-input\">\n            <input\n              className={classList('RecipientsInput FormControl', {\n                open: !!this.value(),\n                focused: !!this.value(),\n                active: !!this.value(),\n                loading: !!this.loadingSources,\n              })}\n              config={function (element) {\n                element.focus();\n              }}\n              type=\"search\"\n              placeholder={extractText(app.translator.trans('littlecxm-whisper.forum.modal.search_recipients'))}\n              value={this.value()}\n              oninput={withAttr('value', this.value)}\n              onfocus={() => (this.hasFocus = true)}\n              onblur={() => (this.hasFocus = false)}\n              onkeyup={() => {\n                clearTimeout(this.typingTimer);\n                this.doSearch = false;\n                this.typingTimer = setTimeout(() => {\n                  this.doSearch = true;\n                  m.redraw();\n                }, 900);\n              }}\n              onkeydown={() => {\n                clearTimeout(this.typingTimer);\n              }}\n            />\n            <ul\n              className={classList('Dropdown-menu Search-results fade', {\n                in: !!loading,\n              })}\n              onclick={() => {\n                const target = this.$('.SearchResult.active');\n\n                this.addRecipient(target.data('index'));\n                this.$('.RecipientsInput').trigger('focus');\n              }}\n            >\n              {!this.doSearch\n                ? LoadingIndicator.component({ size: 'tiny', className: 'Button Button--icon Button--link' })\n                : this.sources.map((source) => source.view(this.value()))}\n              <li>\n                <span>{app.translator.trans('littlecxm-whisper.forum.modal.more_users')}</span>\n              </li>\n            </ul>\n          </div>\n        ) : (\n          <div className=\"RecipientsInput-selected RecipientsLabel\">\n            {recipientLabel(app.cache.conversationsRecipient, {\n              onclick: () => {\n                this.removeRecipient(app.cache.conversationsRecipient);\n              },\n            })}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  /**\n   * Build an item list of SearchSources.\n   *\n   * @return {ItemList}\n   */\n  sourceItems() {\n    const items = new ItemList();\n\n    items.add('users', new UserSearchSource());\n\n    return items;\n  }\n\n  /**\n   * Clear the search input and the current controller's active search.\n   */\n  clear() {\n    this.value('');\n\n    m.redraw();\n  }\n\n  /**\n   * Adds a recipient.\n   *\n   * @param value\n   */\n  addRecipient(value) {\n    app.cache.conversationsRecipient = app.store.getById('users', value);\n\n    this.clear();\n  }\n\n  /**\n   * Removes a recipient.\n   *\n   * @param recipient\n   */\n  removeRecipient(recipient) {\n    app.cache.conversationsRecipient = null;\n\n    m.redraw();\n  }\n\n  /**\n   * Loads a recipient from the global store.\n   *\n   * @param store\n   * @param id\n   * @returns {Model}\n   */\n  findRecipient(store, id) {\n    return app.store.getById(store, id);\n  }\n}\n","import extract from 'flarum/common/utils/extract';\nimport avatar from 'flarum/common/helpers/avatar';\nimport username from 'flarum/common/helpers/username';\n\nexport default function recipientLabel(recipient, attrs = {}) {\n  attrs.style = attrs.style || {};\n  attrs.className = 'RecipientLabel ' + (attrs.className || '');\n\n  const link = extract(attrs, 'link');\n\n  return m(\n    link ? 'a' : 'span',\n    attrs,\n    <span className=\"RecipientLabel-text\">\n      {avatar(recipient)}\n      {username(recipient)}\n    </span>\n  );\n}\n","import Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport RecipientSearch from './RecipientSearch';\nimport username from 'flarum/common/helpers/username';\nimport Stream from 'flarum/common/utils/Stream';\nimport withAttr from 'flarum/common/utils/withAttr';\nimport app from 'flarum/forum/app';\n\nexport default class StartConversationModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    app.cache.conversationsRecipient = null;\n\n    this.conversations = this.attrs.conversations;\n\n    this.already = false;\n\n    this.messageContent = Stream('');\n  }\n\n  title() {\n    return app.translator.trans('littlecxm-whisper.forum.modal.title');\n  }\n\n  className() {\n    return 'StartConversationModal Modal--medium';\n  }\n\n  content() {\n    return [\n      <div className=\"Modal-body\" onclick={(e) => e.stopImmediatePropagation()}>\n        {this.already ? (\n          [\n            <h2>{app.translator.trans('littlecxm-whisper.forum.modal.already', { username: username(this.recpient) })}</h2>,\n            <h2>{app.translator.trans('littlecxm-whisper.forum.modal.copied', { username: username(this.recpient) })}</h2>,\n          ]\n        ) : (\n          <div>\n            <div class=\"helpText\">\n              {app.cache.conversationsRecipient !== null\n                ? app.translator.trans('littlecxm-whisper.forum.modal.help_start', { username: username(app.cache.conversationsRecipient) })\n                : app.translator.trans('littlecxm-whisper.forum.modal.help')}\n            </div>\n            <div className=\"AddRecipientModal-form\">\n              <RecipientSearch state={app.search} />\n              {app.cache.conversationsRecipient !== null ? (\n                <div className=\"AddRecipientModal-form-submit\">\n                  <textarea\n                    value={this.messageContent()}\n                    oninput={withAttr('value', this.messageContent)}\n                    placeholder={app.translator.trans('littlecxm-whisper.forum.chat.text_placeholder')}\n                    rows=\"3\"\n                  />\n                  {Button.component(\n                    {\n                      type: 'submit',\n                      className: 'Button Button--primary',\n                      disabled: !this.messageContent(),\n                    },\n                    app.translator.trans('littlecxm-whisper.forum.modal.submit')\n                  )}\n                </div>\n              ) : (\n                ''\n              )}\n            </div>\n          </div>\n        )}\n      </div>,\n    ];\n  }\n\n  onsubmit(e) {\n    e.preventDefault();\n\n    const recipient = app.cache.conversationsRecipient;\n    this.recpient = recipient;\n    app.cache.conversationsRecipient = null;\n\n    app.store\n      .createRecord('conversations')\n      .save({\n        messageContents: this.messageContent(),\n        recipient: recipient.id(),\n      })\n      .then((conversation) => {\n        if (!conversation.notNew()) {\n          this.conversations.push(conversation);\n          const preconv = app.session.user.conversations();\n          preconv.push(conversation);\n          app.session.user.conversations = Stream(preconv);\n          m.redraw();\n          app.modal.close();\n        } else {\n          let input = document.createElement('textarea');\n          document.body.appendChild(input);\n          input.value = this.messageContent();\n          input.focus();\n          input.select();\n          document.execCommand('Copy');\n          input.remove();\n          this.already = true;\n          m.redraw();\n        }\n      });\n  }\n}\n","import Button from 'flarum/common/components/Button';\nimport Component from 'flarum/common/Component';\nimport ConversationView from './ConversationView';\nimport UserListItem from './UserListItem';\nimport StartConversationModal from './StartConversationModal';\nimport app from 'flarum/forum/app';\n\nexport default class ConversationsList extends Component {\n  oninit(vnode) {\n    this.mobile = vnode.attrs.mobile;\n    this.load();\n    this.loading = false;\n    this.currentConversation = null;\n  }\n\n  onupdate() {}\n\n  onbeforeupdate() {\n    const list = $('.ConversationsList-list');\n\n    list.off('scroll').on('scroll', () => {\n      if (list.scrollTop() + list.innerHeight() >= list[0].scrollHeight) {\n        this.loadMore();\n      }\n    });\n  }\n\n  view() {\n    if (this.loading) return;\n    const conversations = app.cache.conversations;\n\n    if (this.currentConversation === null && app.cache.conversations && app.cache.conversations.length > 0) {\n      this.currentConversation = app.cache.conversations[0];\n    }\n\n    if (this.currentConversation) {\n      this.conversationComponent = ConversationView.component({ conversation: this.currentConversation, mobile: this.mobile });\n    }\n\n    return (\n      <div className=\"ConversationsList\">\n        <div style={app.session.user.conversations().length ? '' : 'width: unset; padding: 10px;'} className=\"container clearfix\">\n          <div style={this.mobile ? 'float: unset; margin: 0 auto; display: block;' : ''} className=\"people-list\" id=\"people-list\">\n            {Button.component(\n              {\n                onclick: this.showModal.bind(this),\n                className: 'Button Button--primary',\n                disabled: !app.forum.attribute('canMessage'),\n              },\n              app.forum.attribute('canMessage')\n                ? app.translator.trans('littlecxm-whisper.forum.chat.start')\n                : app.translator.trans('littlecxm-whisper.forum.chat.cant_start')\n            )}\n            {!!app.session.user.conversations().length && (\n              <ul className=\"ConversationsList-list\">\n                {Array.isArray(conversations) &&\n                  conversations.map((conversation, i) => {\n                    return (\n                      <UserListItem\n                        conversation={conversation}\n                        i={i}\n                        active={this.mobile ? false : this.currentConversation === conversation}\n                        onclick={(e) => {\n                          if (this.mobile) {\n                            m.route(app.route('messages', { id: app.cache.conversations[$(e.currentTarget).attr('id')].id() }));\n                          } else {\n                            this.currentConversation = app.cache.conversations[$(e.currentTarget).attr('id')];\n                            m.redraw();\n                          }\n                        }}\n                      />\n                    );\n                  })}\n              </ul>\n            )}\n          </div>\n\n          {!this.mobile && this.conversationComponent}\n        </div>\n      </div>\n    );\n  }\n\n  showModal() {\n    app.modal.show(StartConversationModal, {\n      conversations: app.cache.conversations,\n      messages: app.cache.messages,\n    });\n  }\n\n  loadMore() {\n    this.loading = true;\n    m.redraw();\n\n    app.store\n      .find('whisper/conversations', { offset: app.cache.conversations.length })\n      .then((results) => {\n        delete results.payload;\n        results.map((result) => {\n          app.cache.conversations.push(result);\n        });\n      })\n      .catch(() => {})\n      .then(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n\n  load() {\n    if (app.cache.conversations && !this.mobile) {\n      return;\n    }\n\n    if (this.mobile) {\n      app.cache.conversations = [];\n    }\n\n    this.loading = true;\n    m.redraw();\n\n    app.store\n      .find('whisper/conversations')\n      .then((results) => {\n        delete results.payload;\n        app.cache.conversations = results;\n      })\n      .catch(() => {})\n      .then(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n}\n","import Page from 'flarum/common/components/Page';\n\nimport ConversationsList from './ConversationsList';\n\nexport default class ConversationsPage extends Page {\n  oninit() {\n    super.oninit();\n\n    app.history.push('messages');\n\n    this.bodyClass = 'App--conversations';\n  }\n\n  view() {\n    return (\n      <div className=\"ConversationsPage\">\n        <ConversationsList mobile={true}></ConversationsList>\n      </div>\n    );\n  }\n}\n","import Page from 'flarum/common/components/Page';\n\nimport ConversationView from './ConversationView';\n\nexport default class ConversationViewPage extends Page {\n  init() {\n    super.init();\n\n    app.history.push('conversations');\n\n    const idParam = m.route.param('id');\n\n    app.store.find('whisper/conversations', idParam).then((conversation) => {\n      app.cache.conversations = [];\n      app.cache.conversations.push(conversation);\n      this.list = ConversationView.component({ conversation, mobile: true });\n      m.redraw();\n    });\n\n    this.bodyClass = 'App--messages';\n  }\n\n  view() {\n    return (\n      <div className=\"MessagesPage\">\n        <div className=\"ConversationsList\">\n          <div className=\"container clearfix\">{this.list ? this.list : null}</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import app from 'flarum/forum/app';\nimport NotificationsDropdown from 'flarum/forum/components/NotificationsDropdown';\n\nimport ConversationsList from './ConversationsList';\n\nexport default class ConversationsDropdown extends NotificationsDropdown {\n  static initAttrs(attrs) {\n    attrs.label ||= attrs.label || app.translator.trans('littlecxm-whisper.forum.dropdown.tooltip');\n    attrs.icon ||= 'fas fa-comment-alt';\n    attrs.className = 'MessagesDropdown NotificationsDropdown';\n\n    super.initAttrs(attrs);\n  }\n\n  onclick() {\n    if (app.drawer.isOpen()) {\n      this.goToRoute();\n    }\n  }\n\n  getMenu() {\n    return <form className={'Dropdown-menu ' + this.attrs.menuClassName}>{!!this.showing && <ConversationsList mobile={false} />}</form>;\n  }\n\n  goToRoute() {\n    m.route(app.route('conversations'));\n  }\n\n  getUnreadCount() {\n    return app.session.user.unreadMessages();\n  }\n\n  getNewCount() {\n    return app.session.user.unreadMessages();\n  }\n}\n","import app from 'flarum/forum/app';\nimport {extend} from 'flarum/common/extend';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport Message from './models/Message';\nimport Conversation from './models/Conversation';\nimport ConversationUser from './models/ConversationUser';\nimport User from 'flarum/common/models/User';\nimport Model from 'flarum/common/Model';\nimport ConversationsPage from './components/ConversationsPage';\nimport ConversationViewPage from './components/ConversationViewPage';\nimport Stream from 'flarum/common/utils/Stream';\n\nimport addConversationsDropdown from './addConversationsDropdown';\n\napp.initializers.add('littlecxm-whisper', function (app) {\n  app.store.models.messages = Message;\n  app.store.models.conversations = Conversation;\n  app.store.models.conversation_users = ConversationUser;\n\n  User.prototype.conversations = Model.hasMany('conversations');\n  User.prototype.unreadMessages = Model.attribute('unreadMessages');\n\n  app.routes.conversations = {path: '/whisper/conversations', component: ConversationsPage};\n  app.routes.messages = {path: '/whisper/messages/:id', component: ConversationViewPage};\n\n  addConversationsDropdown();\n\n  extend(IndexPage.prototype, 'oncreate', function () {\n    if (app.pusher) {\n      app.pusher.then((object) => {\n        const channels = object.channels;\n        if (channels.user) {\n          channels.user.bind('newMessage', (data) => {\n            app.session.user.unreadMessages = Stream(app.session.user.unreadMessages() + 1);\n            m.redraw();\n          });\n        }\n      });\n    }\n  });\n\n  extend(IndexPage.prototype, 'onremove', function () {\n    if (app.pusher) {\n      app.pusher.then((object) => {\n        const channels = object.channels;\n        if (channels.user) {\n          channels.user.unbind('newMessage');\n        }\n      });\n    }\n  });\n});\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport HeaderSecondary from 'flarum/forum/components/HeaderSecondary';\nimport ConversationsDropdown from './components/ConversationsDropdown';\n\nexport default function () {\n  extend(HeaderSecondary.prototype, 'items', function (items) {\n    if (app.forum.attribute('canMessage') || (app.session.user && app.session.user.conversations().length)) {\n      items.add('Messages', <ConversationsDropdown />, 20);\n    }\n  });\n}\n"],"sourceRoot":""}